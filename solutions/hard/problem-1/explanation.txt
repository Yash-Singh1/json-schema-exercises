First of all, we declare a definition for transactions, that contains the rules for a transaction. Second of all, we have that this is an object and it has properties of odd, color, and transactions.

Let's start with odd. For odd numbers the following schema is used:

{
  "type": "integer",
  "not": { "multipleOf": 2 },
  "exclusiveMinimum": 0
}

This means that it is an integer and it is not even. Also, it is greater than 0. This creates the set of 1, 3, 5, ...

Now let's go on to color. The color property is obviously a string. It is given a range of options in the enum propety.

The next and most complicated property is transactions. It is an object and requires to have properties in MM/DD/YY date format. Each of these date properties contain an array with the first two indexes requiring that they don't have the toomuch property and the rest, without such restrictions.

Finally, we require all of the properties.
